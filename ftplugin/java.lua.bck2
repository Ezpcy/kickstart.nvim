local jdtls = require 'jdtls'
local home = os.getenv 'HOME'
local workspace_dir = home .. '/.local/share/eclipse/' .. vim.fn.fnamemodify(vim.fn.getcwd(), ':p:h:t')

local root_dir = require('jdtls.setup').find_root {
  '.git',
  'mvnw',
  'gradlew',
  'pom.xml',
  'build.gradle',
} or vim.fn.getcwd()

-- âœ… Fix: flatten glob result to avoid nesting
local bundles =
  vim.split(vim.fn.glob(home .. '/.local/share/nvim/mason/packages/java-debug-adapter/extension/server/com.microsoft.java.debug.plugin-*.jar', 1), '\n')

local config = {
  cmd = {
    'java',
    '-Declipse.application=org.eclipse.jdt.ls.core.id1',
    '-Dosgi.bundles.defaultStartLevel=4',
    '-Declipse.product=org.eclipse.jdt.ls.core.product',
    '-Dlog.protocol=true',
    '-Dlog.level=ALL',
    '-Xms1g',
    '--add-modules=ALL-SYSTEM',
    '--add-opens',
    'java.base/java.util=ALL-UNNAMED',
    '--add-opens',
    'java.base/java.lang=ALL-UNNAMED',
    '-jar',
    vim.fn.glob(home .. '/.local/share/nvim/mason/packages/jdtls/plugins/org.eclipse.equinox.launcher_*.jar', 1),
    '-configuration',
    home .. '/.local/share/nvim/mason/packages/jdtls/config_linux',
    '-data',
    workspace_dir,
  },

  root_dir = root_dir,

  init_options = {
    bundles = bundles,
  },

  settings = {
    java = {
      project = {
        referencedLibraries = {
          '/usr/share/java/tomcat10/*',
        },
      },
    },
  },

  on_attach = function()
    jdtls.setup_dap { hotcodereplace = 'auto' }
    jdtls.dap.setup_dap_main_class_configs()
  end,
}

-- Kill any jdtls client that was auto-attached by mason/lspconfig
for _, client in pairs(vim.lsp.get_active_clients()) do
  if client.name == 'jdtls' then
    client.stop()
  end
end

jdtls.start_or_attach(config)
