vim.api.nvim_create_autocmd('FileType', {
  pattern = 'java',
  callback = function()
    local jdtls = require 'jdtls'

    local home = os.getenv 'HOME'
    local workspace_folder = home .. '/.local/share/eclipse/' .. vim.fn.fnamemodify(vim.fn.getcwd(), ':p:h:t')
    local jdtls_path = vim.fn.stdpath 'data' .. '/mason/packages/jdtls'

    local config = {
      cmd = {
        '/usr/lib/jvm/java-21-openjdk/bin/java',
        '-Declipse.application=org.eclipse.jdt.ls.core.id1',
        '-Dosgi.bundles.defaultStartLevel=4',
        '-Declipse.product=org.eclipse.jdt.ls.core.product',
        '-Dlog.protocol=true',
        '-Dlog.level=ALL',
        '-Xms1g',
        '--add-modules=ALL-SYSTEM',
        '--add-opens',
        'java.base/java.util=ALL-UNNAMED',
        '--add-opens',
        'java.base/java.lang=ALL-UNNAMED',
        '-jar',
        vim.fn.glob(jdtls_path .. '/plugins/org.eclipse.equinox.launcher_*.jar'),
        '-configuration',
        jdtls_path .. '/config_linux',
        '-data',
        workspace_folder,
      },

      root_dir = jdtls.setup.find_root { '.git', 'mvnw', 'gradlew' },

      settings = {
        java = {
          project = {
            referencedLibraries = {
              '/usr/share/java/tomcat10/*',
            },
          },
        },
      },

      init_options = {
        bundles = {
          vim.fn.glob(home .. '/.local/share/nvim/mason/packages/java-debug-adapter/extension/server/com.microsoft.java.debug.plugin-*.jar', 1),
          unpack(vim.split(vim.fn.glob(home .. '/.local/share/nvim/mason/packages/java-test/extension/server/*.jar', 1), '\n')),
        },
      },

      on_attach = function(_, bufnr)
        jdtls.setup_dap { hotcodereplace = 'auto' }
        require('jdtls.dap').setup_dap_main_class_configs()
        jdtls.add_commands()
      end,
    }

    jdtls.start_or_attach(config)
  end,
})
